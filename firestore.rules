
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can be read by anyone to allow for username->uid lookups for public reports.
    // Writes are still protected, only the user can modify their own data.
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }

    // Usernames can be read by anyone to check for existence or find a user.
    // Writes are protected to prevent squatting or theft.
    match /usernames/{username} {
      allow get: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
      allow delete: if request.auth != null && request.auth.uid == resource.data.uid;
      allow update: if false;
    }

    // Rules for the 'reports' collection
    match /reports/{reportId} {
      // ANYONE can read a single report document IF it is public.
      // This is used by the public /<username>/<slug> page after it has the UID.
      allow get: if resource.data.isPublic == true;

      // AUTHENTICATED USERS can list their OWN reports.
      // This is used by the /saved page. The query in the app must be `where("uid", "==", request.auth.uid)`.
      allow list: if request.auth != null && request.auth.uid == request.query.where.uid;

      // AUTHENTICATED USERS can read any of their own reports, public or private.
      // This is used on the /saved/[id] page.
      allow read: if request.auth != null && request.auth.uid == resource.data.uid;

      // AUTHENTICATED USERS can create reports for themselves.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;

      // AUTHENTICATED USERS can update or delete their own reports.
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }
  }
}
